Terminals which are not used

   TOKEN_EOF
   TOKEN_ERROR
   TOKEN_CCOMMENT
   TOKEN_CPPCOMMENT
   TOKEN_ARRAY
   TOKEN_FOR
   TOKEN_SEMICOLON


Grammar

    0 $accept: program $end

    1 program: decl_list TOKEN_HEART TOKEN_HEART TOKEN_HEART

    2 decl_list: /* empty */
    3          | decl decl_list

    4 decl: var_assgn
    5     | name TOKEN_FUNCTIONA type TOKEN_FUNCTIONB opt_param_list TOKEN_FUNCTIONC stmt_list TOKEN_FUNCTION_END
    6     | TOKEN_FUNCTION_MAIN stmt_list TOKEN_FUNCTION_END

    7 opt_param_list: /* empty */
    8               | param_list

    9 param_list: param
   10           | param TOKEN_COMMA param_list

   11 param: type TOKEN_COLON name

   12 stmt_list: /* empty */
   13          | stmt stmt_list

   14 stmt: TOKEN_LEFTBRACKET expr TOKEN_RIGHTBRACKET TOKEN_RETURN
   15     | TOKEN_PRINT TOKEN_LEFTPARAN expr TOKEN_RIGHTPARAN
   16     | TOKEN_WHILEA expr TOKEN_WHILEB while_stmt_list TOKEN_WHILE_END
   17     | TOKEN_IF expr if_stmt_list TOKEN_IF_END
   18     | TOKEN_IF expr if_stmt_list TOKEN_ELSE if_stmt_list TOKEN_IF_END
   19     | name TOKEN_HEART opt_fcall_list TOKEN_HEART
   20     | name TOKEN_INCREMENT
   21     | name TOKEN_DECREMENT
   22     | name TOKEN_ASSIGN expr
   23     | var_assgn

   24 opt_fcall_list: /* empty */
   25               | fcall_list

   26 fcall_list: expr
   27           | expr TOKEN_COMMA fcall_list

   28 if_stmt_list: /* empty */
   29             | TOKEN_LEFTCURLYBRACE stmt TOKEN_RIGHTCURLYBRACE if_stmt_list
   30             | TOKEN_LEFTCURLYBRACE TOKEN_RIGHTCURLYBRACE if_stmt_list

   31 while_stmt_list: /* empty */
   32                | TOKEN_TILDE stmt TOKEN_TILDE while_stmt_list
   33                | TOKEN_TILDE TOKEN_TILDE while_stmt_list

   34 var_assgn: type TOKEN_COLON name TOKEN_ASSIGN expr
   35          | type TOKEN_COLON name

   36 type: TOKEN_CHARKEY
   37     | TOKEN_BOOLEAN
   38     | TOKEN_INTEGER
   39     | TOKEN_STRINGKEY
   40     | TOKEN_VOID

   41 expr: expr TOKEN_OR expr_bcomp_a
   42     | expr_bcomp_a

   43 expr_bcomp_a: expr_bcomp_a TOKEN_AND expr_icomp
   44             | expr_icomp

   45 expr_icomp: expr_icomp TOKEN_GT expr_as
   46           | expr_icomp TOKEN_LT expr_as
   47           | expr_icomp TOKEN_GE expr_as
   48           | expr_icomp TOKEN_LE expr_as
   49           | expr_icomp TOKEN_NOTEQUALS expr_as
   50           | expr_icomp TOKEN_EQUALITY expr_as
   51           | expr_as

   52 expr_as: expr_as TOKEN_PLUS expr_mmd
   53        | expr_as TOKEN_MINUS expr_mmd
   54        | expr_mmd

   55 expr_mmd: expr_mmd TOKEN_MUL expr_e
   56         | expr_mmd TOKEN_DIV expr_e
   57         | expr_mmd TOKEN_MODULO expr_e
   58         | expr_e

   59 expr_e: expr_e TOKEN_EXPONENT expr_negate
   60       | expr_negate

   61 expr_negate: TOKEN_MINUS expr_par
   62            | TOKEN_NEGATION expr_par
   63            | expr_par

   64 expr_par: TOKEN_LEFTPARAN expr TOKEN_RIGHTPARAN
   65         | factor

   66 factor: TOKEN_NUMBER
   67       | name
   68       | TOKEN_CHAR
   69       | TOKEN_STRING
   70       | TOKEN_TRUE
   71       | TOKEN_FALSE

   72 name: TOKEN_IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_EOF (258)
TOKEN_WHILEA (259) 16
TOKEN_WHILEB (260) 16
TOKEN_WHILE_END (261) 16
TOKEN_PLUS (262) 52
TOKEN_IDENT (263) 72
TOKEN_EXPONENT (264) 59
TOKEN_ERROR (265)
TOKEN_MINUS (266) 53 61
TOKEN_MUL (267) 55
TOKEN_DIV (268) 56
TOKEN_STRING (269) 69
TOKEN_CHAR (270) 68
TOKEN_NUMBER (271) 66
TOKEN_FALSE (272) 71
TOKEN_DECREMENT (273) 21
TOKEN_INCREMENT (274) 20
TOKEN_ASSIGN (275) 22 34
TOKEN_EQUALITY (276) 50
TOKEN_HEART (277) 1 19
TOKEN_LT (278) 46
TOKEN_LE (279) 48
TOKEN_GT (280) 45
TOKEN_GE (281) 47
TOKEN_NOTEQUALS (282) 49
TOKEN_NEGATION (283) 62
TOKEN_MODULO (284) 57
TOKEN_AND (285) 43
TOKEN_OR (286) 41
TOKEN_LEFTPARAN (287) 15 64
TOKEN_RIGHTPARAN (288) 15 64
TOKEN_LEFTBRACKET (289) 14
TOKEN_RIGHTBRACKET (290) 14
TOKEN_CCOMMENT (291)
TOKEN_CPPCOMMENT (292)
TOKEN_TRUE (293) 70
TOKEN_ARRAY (294)
TOKEN_BOOLEAN (295) 37
TOKEN_CHARKEY (296) 36
TOKEN_ELSE (297) 18
TOKEN_FOR (298)
TOKEN_FUNCTIONA (299) 5
TOKEN_FUNCTION_MAIN (300) 6
TOKEN_FUNCTIONB (301) 5
TOKEN_FUNCTIONC (302) 5
TOKEN_FUNCTION_END (303) 5 6
TOKEN_IF (304) 17 18
TOKEN_IF_END (305) 17 18
TOKEN_INTEGER (306) 38
TOKEN_PRINT (307) 15
TOKEN_RETURN (308) 14
TOKEN_STRINGKEY (309) 39
TOKEN_VOID (310) 40
TOKEN_SEMICOLON (311)
TOKEN_COLON (312) 11 34 35
TOKEN_TILDE (313) 32 33
TOKEN_LEFTCURLYBRACE (314) 29 30
TOKEN_RIGHTCURLYBRACE (315) 29 30
TOKEN_COMMA (316) 10 27


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
program (63)
    on left: 1, on right: 0
decl_list (64)
    on left: 2 3, on right: 1 3
decl (65)
    on left: 4 5 6, on right: 3
opt_param_list (66)
    on left: 7 8, on right: 5
param_list (67)
    on left: 9 10, on right: 8 10
param (68)
    on left: 11, on right: 9 10
stmt_list (69)
    on left: 12 13, on right: 5 6 13
stmt (70)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 13 29 32
opt_fcall_list (71)
    on left: 24 25, on right: 19
fcall_list (72)
    on left: 26 27, on right: 25 27
if_stmt_list (73)
    on left: 28 29 30, on right: 17 18 29 30
while_stmt_list (74)
    on left: 31 32 33, on right: 16 32 33
var_assgn (75)
    on left: 34 35, on right: 4 23
type (76)
    on left: 36 37 38 39 40, on right: 5 11 34 35
expr (77)
    on left: 41 42, on right: 14 15 16 17 18 22 26 27 34 41 64
expr_bcomp_a (78)
    on left: 43 44, on right: 41 42 43
expr_icomp (79)
    on left: 45 46 47 48 49 50 51, on right: 43 44 45 46 47 48 49 50
expr_as (80)
    on left: 52 53 54, on right: 45 46 47 48 49 50 51 52 53
expr_mmd (81)
    on left: 55 56 57 58, on right: 52 53 54 55 56 57
expr_e (82)
    on left: 59 60, on right: 55 56 57 58 59
expr_negate (83)
    on left: 61 62 63, on right: 59 60
expr_par (84)
    on left: 64 65, on right: 61 62 63
factor (85)
    on left: 66 67 68 69 70 71, on right: 65
name (86)
    on left: 72, on right: 5 11 19 20 21 22 34 35 67


state 0

    0 $accept: . program $end

    TOKEN_IDENT          shift, and go to state 1
    TOKEN_BOOLEAN        shift, and go to state 2
    TOKEN_CHARKEY        shift, and go to state 3
    TOKEN_FUNCTION_MAIN  shift, and go to state 4
    TOKEN_INTEGER        shift, and go to state 5
    TOKEN_STRINGKEY      shift, and go to state 6
    TOKEN_VOID           shift, and go to state 7

    $default  reduce using rule 2 (decl_list)

    program    go to state 8
    decl_list  go to state 9
    decl       go to state 10
    var_assgn  go to state 11
    type       go to state 12
    name       go to state 13


state 1

   72 name: TOKEN_IDENT .

    $default  reduce using rule 72 (name)


state 2

   37 type: TOKEN_BOOLEAN .

    $default  reduce using rule 37 (type)


state 3

   36 type: TOKEN_CHARKEY .

    $default  reduce using rule 36 (type)


state 4

    6 decl: TOKEN_FUNCTION_MAIN . stmt_list TOKEN_FUNCTION_END

    TOKEN_WHILEA       shift, and go to state 14
    TOKEN_IDENT        shift, and go to state 1
    TOKEN_LEFTBRACKET  shift, and go to state 15
    TOKEN_BOOLEAN      shift, and go to state 2
    TOKEN_CHARKEY      shift, and go to state 3
    TOKEN_IF           shift, and go to state 16
    TOKEN_INTEGER      shift, and go to state 5
    TOKEN_PRINT        shift, and go to state 17
    TOKEN_STRINGKEY    shift, and go to state 6
    TOKEN_VOID         shift, and go to state 7

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 18
    stmt       go to state 19
    var_assgn  go to state 20
    type       go to state 12
    name       go to state 21


state 5

   38 type: TOKEN_INTEGER .

    $default  reduce using rule 38 (type)


state 6

   39 type: TOKEN_STRINGKEY .

    $default  reduce using rule 39 (type)


state 7

   40 type: TOKEN_VOID .

    $default  reduce using rule 40 (type)


state 8

    0 $accept: program . $end

    $end  shift, and go to state 22


state 9

    1 program: decl_list . TOKEN_HEART TOKEN_HEART TOKEN_HEART

    TOKEN_HEART  shift, and go to state 23


state 10

    3 decl_list: decl . decl_list

    TOKEN_IDENT          shift, and go to state 1
    TOKEN_BOOLEAN        shift, and go to state 2
    TOKEN_CHARKEY        shift, and go to state 3
    TOKEN_FUNCTION_MAIN  shift, and go to state 4
    TOKEN_INTEGER        shift, and go to state 5
    TOKEN_STRINGKEY      shift, and go to state 6
    TOKEN_VOID           shift, and go to state 7

    $default  reduce using rule 2 (decl_list)

    decl_list  go to state 24
    decl       go to state 10
    var_assgn  go to state 11
    type       go to state 12
    name       go to state 13


state 11

    4 decl: var_assgn .

    $default  reduce using rule 4 (decl)


state 12

   34 var_assgn: type . TOKEN_COLON name TOKEN_ASSIGN expr
   35          | type . TOKEN_COLON name

    TOKEN_COLON  shift, and go to state 25


state 13

    5 decl: name . TOKEN_FUNCTIONA type TOKEN_FUNCTIONB opt_param_list TOKEN_FUNCTIONC stmt_list TOKEN_FUNCTION_END

    TOKEN_FUNCTIONA  shift, and go to state 26


state 14

   16 stmt: TOKEN_WHILEA . expr TOKEN_WHILEB while_stmt_list TOKEN_WHILE_END

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr          go to state 35
    expr_bcomp_a  go to state 36
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 15

   14 stmt: TOKEN_LEFTBRACKET . expr TOKEN_RIGHTBRACKET TOKEN_RETURN

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr          go to state 45
    expr_bcomp_a  go to state 36
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 16

   17 stmt: TOKEN_IF . expr if_stmt_list TOKEN_IF_END
   18     | TOKEN_IF . expr if_stmt_list TOKEN_ELSE if_stmt_list TOKEN_IF_END

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr          go to state 46
    expr_bcomp_a  go to state 36
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 17

   15 stmt: TOKEN_PRINT . TOKEN_LEFTPARAN expr TOKEN_RIGHTPARAN

    TOKEN_LEFTPARAN  shift, and go to state 47


state 18

    6 decl: TOKEN_FUNCTION_MAIN stmt_list . TOKEN_FUNCTION_END

    TOKEN_FUNCTION_END  shift, and go to state 48


state 19

   13 stmt_list: stmt . stmt_list

    TOKEN_WHILEA       shift, and go to state 14
    TOKEN_IDENT        shift, and go to state 1
    TOKEN_LEFTBRACKET  shift, and go to state 15
    TOKEN_BOOLEAN      shift, and go to state 2
    TOKEN_CHARKEY      shift, and go to state 3
    TOKEN_IF           shift, and go to state 16
    TOKEN_INTEGER      shift, and go to state 5
    TOKEN_PRINT        shift, and go to state 17
    TOKEN_STRINGKEY    shift, and go to state 6
    TOKEN_VOID         shift, and go to state 7

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 49
    stmt       go to state 19
    var_assgn  go to state 20
    type       go to state 12
    name       go to state 21


state 20

   23 stmt: var_assgn .

    $default  reduce using rule 23 (stmt)


state 21

   19 stmt: name . TOKEN_HEART opt_fcall_list TOKEN_HEART
   20     | name . TOKEN_INCREMENT
   21     | name . TOKEN_DECREMENT
   22     | name . TOKEN_ASSIGN expr

    TOKEN_DECREMENT  shift, and go to state 50
    TOKEN_INCREMENT  shift, and go to state 51
    TOKEN_ASSIGN     shift, and go to state 52
    TOKEN_HEART      shift, and go to state 53


state 22

    0 $accept: program $end .

    $default  accept


state 23

    1 program: decl_list TOKEN_HEART . TOKEN_HEART TOKEN_HEART

    TOKEN_HEART  shift, and go to state 54


state 24

    3 decl_list: decl decl_list .

    $default  reduce using rule 3 (decl_list)


state 25

   34 var_assgn: type TOKEN_COLON . name TOKEN_ASSIGN expr
   35          | type TOKEN_COLON . name

    TOKEN_IDENT  shift, and go to state 1

    name  go to state 55


state 26

    5 decl: name TOKEN_FUNCTIONA . type TOKEN_FUNCTIONB opt_param_list TOKEN_FUNCTIONC stmt_list TOKEN_FUNCTION_END

    TOKEN_BOOLEAN    shift, and go to state 2
    TOKEN_CHARKEY    shift, and go to state 3
    TOKEN_INTEGER    shift, and go to state 5
    TOKEN_STRINGKEY  shift, and go to state 6
    TOKEN_VOID       shift, and go to state 7

    type  go to state 56


state 27

   61 expr_negate: TOKEN_MINUS . expr_par

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_par  go to state 57
    factor    go to state 43
    name      go to state 44


state 28

   69 factor: TOKEN_STRING .

    $default  reduce using rule 69 (factor)


state 29

   68 factor: TOKEN_CHAR .

    $default  reduce using rule 68 (factor)


state 30

   66 factor: TOKEN_NUMBER .

    $default  reduce using rule 66 (factor)


state 31

   71 factor: TOKEN_FALSE .

    $default  reduce using rule 71 (factor)


state 32

   62 expr_negate: TOKEN_NEGATION . expr_par

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_par  go to state 58
    factor    go to state 43
    name      go to state 44


state 33

   64 expr_par: TOKEN_LEFTPARAN . expr TOKEN_RIGHTPARAN

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr          go to state 59
    expr_bcomp_a  go to state 36
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 34

   70 factor: TOKEN_TRUE .

    $default  reduce using rule 70 (factor)


state 35

   16 stmt: TOKEN_WHILEA expr . TOKEN_WHILEB while_stmt_list TOKEN_WHILE_END
   41 expr: expr . TOKEN_OR expr_bcomp_a

    TOKEN_WHILEB  shift, and go to state 60
    TOKEN_OR      shift, and go to state 61


state 36

   42 expr: expr_bcomp_a .
   43 expr_bcomp_a: expr_bcomp_a . TOKEN_AND expr_icomp

    TOKEN_AND  shift, and go to state 62

    $default  reduce using rule 42 (expr)


state 37

   44 expr_bcomp_a: expr_icomp .
   45 expr_icomp: expr_icomp . TOKEN_GT expr_as
   46           | expr_icomp . TOKEN_LT expr_as
   47           | expr_icomp . TOKEN_GE expr_as
   48           | expr_icomp . TOKEN_LE expr_as
   49           | expr_icomp . TOKEN_NOTEQUALS expr_as
   50           | expr_icomp . TOKEN_EQUALITY expr_as

    TOKEN_EQUALITY   shift, and go to state 63
    TOKEN_LT         shift, and go to state 64
    TOKEN_LE         shift, and go to state 65
    TOKEN_GT         shift, and go to state 66
    TOKEN_GE         shift, and go to state 67
    TOKEN_NOTEQUALS  shift, and go to state 68

    $default  reduce using rule 44 (expr_bcomp_a)


state 38

   51 expr_icomp: expr_as .
   52 expr_as: expr_as . TOKEN_PLUS expr_mmd
   53        | expr_as . TOKEN_MINUS expr_mmd

    TOKEN_PLUS   shift, and go to state 69
    TOKEN_MINUS  shift, and go to state 70

    $default  reduce using rule 51 (expr_icomp)


state 39

   54 expr_as: expr_mmd .
   55 expr_mmd: expr_mmd . TOKEN_MUL expr_e
   56         | expr_mmd . TOKEN_DIV expr_e
   57         | expr_mmd . TOKEN_MODULO expr_e

    TOKEN_MUL     shift, and go to state 71
    TOKEN_DIV     shift, and go to state 72
    TOKEN_MODULO  shift, and go to state 73

    $default  reduce using rule 54 (expr_as)


state 40

   58 expr_mmd: expr_e .
   59 expr_e: expr_e . TOKEN_EXPONENT expr_negate

    TOKEN_EXPONENT  shift, and go to state 74

    $default  reduce using rule 58 (expr_mmd)


state 41

   60 expr_e: expr_negate .

    $default  reduce using rule 60 (expr_e)


state 42

   63 expr_negate: expr_par .

    $default  reduce using rule 63 (expr_negate)


state 43

   65 expr_par: factor .

    $default  reduce using rule 65 (expr_par)


state 44

   67 factor: name .

    $default  reduce using rule 67 (factor)


state 45

   14 stmt: TOKEN_LEFTBRACKET expr . TOKEN_RIGHTBRACKET TOKEN_RETURN
   41 expr: expr . TOKEN_OR expr_bcomp_a

    TOKEN_OR            shift, and go to state 61
    TOKEN_RIGHTBRACKET  shift, and go to state 75


state 46

   17 stmt: TOKEN_IF expr . if_stmt_list TOKEN_IF_END
   18     | TOKEN_IF expr . if_stmt_list TOKEN_ELSE if_stmt_list TOKEN_IF_END
   41 expr: expr . TOKEN_OR expr_bcomp_a

    TOKEN_OR              shift, and go to state 61
    TOKEN_LEFTCURLYBRACE  shift, and go to state 76

    $default  reduce using rule 28 (if_stmt_list)

    if_stmt_list  go to state 77


state 47

   15 stmt: TOKEN_PRINT TOKEN_LEFTPARAN . expr TOKEN_RIGHTPARAN

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr          go to state 78
    expr_bcomp_a  go to state 36
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 48

    6 decl: TOKEN_FUNCTION_MAIN stmt_list TOKEN_FUNCTION_END .

    $default  reduce using rule 6 (decl)


state 49

   13 stmt_list: stmt stmt_list .

    $default  reduce using rule 13 (stmt_list)


state 50

   21 stmt: name TOKEN_DECREMENT .

    $default  reduce using rule 21 (stmt)


state 51

   20 stmt: name TOKEN_INCREMENT .

    $default  reduce using rule 20 (stmt)


state 52

   22 stmt: name TOKEN_ASSIGN . expr

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr          go to state 79
    expr_bcomp_a  go to state 36
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 53

   19 stmt: name TOKEN_HEART . opt_fcall_list TOKEN_HEART

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    $default  reduce using rule 24 (opt_fcall_list)

    opt_fcall_list  go to state 80
    fcall_list      go to state 81
    expr            go to state 82
    expr_bcomp_a    go to state 36
    expr_icomp      go to state 37
    expr_as         go to state 38
    expr_mmd        go to state 39
    expr_e          go to state 40
    expr_negate     go to state 41
    expr_par        go to state 42
    factor          go to state 43
    name            go to state 44


state 54

    1 program: decl_list TOKEN_HEART TOKEN_HEART . TOKEN_HEART

    TOKEN_HEART  shift, and go to state 83


state 55

   34 var_assgn: type TOKEN_COLON name . TOKEN_ASSIGN expr
   35          | type TOKEN_COLON name .

    TOKEN_ASSIGN  shift, and go to state 84

    $default  reduce using rule 35 (var_assgn)


state 56

    5 decl: name TOKEN_FUNCTIONA type . TOKEN_FUNCTIONB opt_param_list TOKEN_FUNCTIONC stmt_list TOKEN_FUNCTION_END

    TOKEN_FUNCTIONB  shift, and go to state 85


state 57

   61 expr_negate: TOKEN_MINUS expr_par .

    $default  reduce using rule 61 (expr_negate)


state 58

   62 expr_negate: TOKEN_NEGATION expr_par .

    $default  reduce using rule 62 (expr_negate)


state 59

   41 expr: expr . TOKEN_OR expr_bcomp_a
   64 expr_par: TOKEN_LEFTPARAN expr . TOKEN_RIGHTPARAN

    TOKEN_OR          shift, and go to state 61
    TOKEN_RIGHTPARAN  shift, and go to state 86


state 60

   16 stmt: TOKEN_WHILEA expr TOKEN_WHILEB . while_stmt_list TOKEN_WHILE_END

    TOKEN_TILDE  shift, and go to state 87

    $default  reduce using rule 31 (while_stmt_list)

    while_stmt_list  go to state 88


state 61

   41 expr: expr TOKEN_OR . expr_bcomp_a

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_bcomp_a  go to state 89
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 62

   43 expr_bcomp_a: expr_bcomp_a TOKEN_AND . expr_icomp

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_icomp   go to state 90
    expr_as      go to state 38
    expr_mmd     go to state 39
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 63

   50 expr_icomp: expr_icomp TOKEN_EQUALITY . expr_as

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_as      go to state 91
    expr_mmd     go to state 39
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 64

   46 expr_icomp: expr_icomp TOKEN_LT . expr_as

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_as      go to state 92
    expr_mmd     go to state 39
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 65

   48 expr_icomp: expr_icomp TOKEN_LE . expr_as

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_as      go to state 93
    expr_mmd     go to state 39
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 66

   45 expr_icomp: expr_icomp TOKEN_GT . expr_as

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_as      go to state 94
    expr_mmd     go to state 39
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 67

   47 expr_icomp: expr_icomp TOKEN_GE . expr_as

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_as      go to state 95
    expr_mmd     go to state 39
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 68

   49 expr_icomp: expr_icomp TOKEN_NOTEQUALS . expr_as

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_as      go to state 96
    expr_mmd     go to state 39
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 69

   52 expr_as: expr_as TOKEN_PLUS . expr_mmd

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_mmd     go to state 97
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 70

   53 expr_as: expr_as TOKEN_MINUS . expr_mmd

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_mmd     go to state 98
    expr_e       go to state 40
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 71

   55 expr_mmd: expr_mmd TOKEN_MUL . expr_e

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_e       go to state 99
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 72

   56 expr_mmd: expr_mmd TOKEN_DIV . expr_e

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_e       go to state 100
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 73

   57 expr_mmd: expr_mmd TOKEN_MODULO . expr_e

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_e       go to state 101
    expr_negate  go to state 41
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 74

   59 expr_e: expr_e TOKEN_EXPONENT . expr_negate

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr_negate  go to state 102
    expr_par     go to state 42
    factor       go to state 43
    name         go to state 44


state 75

   14 stmt: TOKEN_LEFTBRACKET expr TOKEN_RIGHTBRACKET . TOKEN_RETURN

    TOKEN_RETURN  shift, and go to state 103


state 76

   29 if_stmt_list: TOKEN_LEFTCURLYBRACE . stmt TOKEN_RIGHTCURLYBRACE if_stmt_list
   30             | TOKEN_LEFTCURLYBRACE . TOKEN_RIGHTCURLYBRACE if_stmt_list

    TOKEN_WHILEA           shift, and go to state 14
    TOKEN_IDENT            shift, and go to state 1
    TOKEN_LEFTBRACKET      shift, and go to state 15
    TOKEN_BOOLEAN          shift, and go to state 2
    TOKEN_CHARKEY          shift, and go to state 3
    TOKEN_IF               shift, and go to state 16
    TOKEN_INTEGER          shift, and go to state 5
    TOKEN_PRINT            shift, and go to state 17
    TOKEN_STRINGKEY        shift, and go to state 6
    TOKEN_VOID             shift, and go to state 7
    TOKEN_RIGHTCURLYBRACE  shift, and go to state 104

    stmt       go to state 105
    var_assgn  go to state 20
    type       go to state 12
    name       go to state 21


state 77

   17 stmt: TOKEN_IF expr if_stmt_list . TOKEN_IF_END
   18     | TOKEN_IF expr if_stmt_list . TOKEN_ELSE if_stmt_list TOKEN_IF_END

    TOKEN_ELSE    shift, and go to state 106
    TOKEN_IF_END  shift, and go to state 107


state 78

   15 stmt: TOKEN_PRINT TOKEN_LEFTPARAN expr . TOKEN_RIGHTPARAN
   41 expr: expr . TOKEN_OR expr_bcomp_a

    TOKEN_OR          shift, and go to state 61
    TOKEN_RIGHTPARAN  shift, and go to state 108


state 79

   22 stmt: name TOKEN_ASSIGN expr .
   41 expr: expr . TOKEN_OR expr_bcomp_a

    TOKEN_OR  shift, and go to state 61

    $default  reduce using rule 22 (stmt)


state 80

   19 stmt: name TOKEN_HEART opt_fcall_list . TOKEN_HEART

    TOKEN_HEART  shift, and go to state 109


state 81

   25 opt_fcall_list: fcall_list .

    $default  reduce using rule 25 (opt_fcall_list)


state 82

   26 fcall_list: expr .
   27           | expr . TOKEN_COMMA fcall_list
   41 expr: expr . TOKEN_OR expr_bcomp_a

    TOKEN_OR     shift, and go to state 61
    TOKEN_COMMA  shift, and go to state 110

    $default  reduce using rule 26 (fcall_list)


state 83

    1 program: decl_list TOKEN_HEART TOKEN_HEART TOKEN_HEART .

    $default  reduce using rule 1 (program)


state 84

   34 var_assgn: type TOKEN_COLON name TOKEN_ASSIGN . expr

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    expr          go to state 111
    expr_bcomp_a  go to state 36
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 85

    5 decl: name TOKEN_FUNCTIONA type TOKEN_FUNCTIONB . opt_param_list TOKEN_FUNCTIONC stmt_list TOKEN_FUNCTION_END

    TOKEN_BOOLEAN    shift, and go to state 2
    TOKEN_CHARKEY    shift, and go to state 3
    TOKEN_INTEGER    shift, and go to state 5
    TOKEN_STRINGKEY  shift, and go to state 6
    TOKEN_VOID       shift, and go to state 7

    $default  reduce using rule 7 (opt_param_list)

    opt_param_list  go to state 112
    param_list      go to state 113
    param           go to state 114
    type            go to state 115


state 86

   64 expr_par: TOKEN_LEFTPARAN expr TOKEN_RIGHTPARAN .

    $default  reduce using rule 64 (expr_par)


state 87

   32 while_stmt_list: TOKEN_TILDE . stmt TOKEN_TILDE while_stmt_list
   33                | TOKEN_TILDE . TOKEN_TILDE while_stmt_list

    TOKEN_WHILEA       shift, and go to state 14
    TOKEN_IDENT        shift, and go to state 1
    TOKEN_LEFTBRACKET  shift, and go to state 15
    TOKEN_BOOLEAN      shift, and go to state 2
    TOKEN_CHARKEY      shift, and go to state 3
    TOKEN_IF           shift, and go to state 16
    TOKEN_INTEGER      shift, and go to state 5
    TOKEN_PRINT        shift, and go to state 17
    TOKEN_STRINGKEY    shift, and go to state 6
    TOKEN_VOID         shift, and go to state 7
    TOKEN_TILDE        shift, and go to state 116

    stmt       go to state 117
    var_assgn  go to state 20
    type       go to state 12
    name       go to state 21


state 88

   16 stmt: TOKEN_WHILEA expr TOKEN_WHILEB while_stmt_list . TOKEN_WHILE_END

    TOKEN_WHILE_END  shift, and go to state 118


state 89

   41 expr: expr TOKEN_OR expr_bcomp_a .
   43 expr_bcomp_a: expr_bcomp_a . TOKEN_AND expr_icomp

    TOKEN_AND  shift, and go to state 62

    $default  reduce using rule 41 (expr)


state 90

   43 expr_bcomp_a: expr_bcomp_a TOKEN_AND expr_icomp .
   45 expr_icomp: expr_icomp . TOKEN_GT expr_as
   46           | expr_icomp . TOKEN_LT expr_as
   47           | expr_icomp . TOKEN_GE expr_as
   48           | expr_icomp . TOKEN_LE expr_as
   49           | expr_icomp . TOKEN_NOTEQUALS expr_as
   50           | expr_icomp . TOKEN_EQUALITY expr_as

    TOKEN_EQUALITY   shift, and go to state 63
    TOKEN_LT         shift, and go to state 64
    TOKEN_LE         shift, and go to state 65
    TOKEN_GT         shift, and go to state 66
    TOKEN_GE         shift, and go to state 67
    TOKEN_NOTEQUALS  shift, and go to state 68

    $default  reduce using rule 43 (expr_bcomp_a)


state 91

   50 expr_icomp: expr_icomp TOKEN_EQUALITY expr_as .
   52 expr_as: expr_as . TOKEN_PLUS expr_mmd
   53        | expr_as . TOKEN_MINUS expr_mmd

    TOKEN_PLUS   shift, and go to state 69
    TOKEN_MINUS  shift, and go to state 70

    $default  reduce using rule 50 (expr_icomp)


state 92

   46 expr_icomp: expr_icomp TOKEN_LT expr_as .
   52 expr_as: expr_as . TOKEN_PLUS expr_mmd
   53        | expr_as . TOKEN_MINUS expr_mmd

    TOKEN_PLUS   shift, and go to state 69
    TOKEN_MINUS  shift, and go to state 70

    $default  reduce using rule 46 (expr_icomp)


state 93

   48 expr_icomp: expr_icomp TOKEN_LE expr_as .
   52 expr_as: expr_as . TOKEN_PLUS expr_mmd
   53        | expr_as . TOKEN_MINUS expr_mmd

    TOKEN_PLUS   shift, and go to state 69
    TOKEN_MINUS  shift, and go to state 70

    $default  reduce using rule 48 (expr_icomp)


state 94

   45 expr_icomp: expr_icomp TOKEN_GT expr_as .
   52 expr_as: expr_as . TOKEN_PLUS expr_mmd
   53        | expr_as . TOKEN_MINUS expr_mmd

    TOKEN_PLUS   shift, and go to state 69
    TOKEN_MINUS  shift, and go to state 70

    $default  reduce using rule 45 (expr_icomp)


state 95

   47 expr_icomp: expr_icomp TOKEN_GE expr_as .
   52 expr_as: expr_as . TOKEN_PLUS expr_mmd
   53        | expr_as . TOKEN_MINUS expr_mmd

    TOKEN_PLUS   shift, and go to state 69
    TOKEN_MINUS  shift, and go to state 70

    $default  reduce using rule 47 (expr_icomp)


state 96

   49 expr_icomp: expr_icomp TOKEN_NOTEQUALS expr_as .
   52 expr_as: expr_as . TOKEN_PLUS expr_mmd
   53        | expr_as . TOKEN_MINUS expr_mmd

    TOKEN_PLUS   shift, and go to state 69
    TOKEN_MINUS  shift, and go to state 70

    $default  reduce using rule 49 (expr_icomp)


state 97

   52 expr_as: expr_as TOKEN_PLUS expr_mmd .
   55 expr_mmd: expr_mmd . TOKEN_MUL expr_e
   56         | expr_mmd . TOKEN_DIV expr_e
   57         | expr_mmd . TOKEN_MODULO expr_e

    TOKEN_MUL     shift, and go to state 71
    TOKEN_DIV     shift, and go to state 72
    TOKEN_MODULO  shift, and go to state 73

    $default  reduce using rule 52 (expr_as)


state 98

   53 expr_as: expr_as TOKEN_MINUS expr_mmd .
   55 expr_mmd: expr_mmd . TOKEN_MUL expr_e
   56         | expr_mmd . TOKEN_DIV expr_e
   57         | expr_mmd . TOKEN_MODULO expr_e

    TOKEN_MUL     shift, and go to state 71
    TOKEN_DIV     shift, and go to state 72
    TOKEN_MODULO  shift, and go to state 73

    $default  reduce using rule 53 (expr_as)


state 99

   55 expr_mmd: expr_mmd TOKEN_MUL expr_e .
   59 expr_e: expr_e . TOKEN_EXPONENT expr_negate

    TOKEN_EXPONENT  shift, and go to state 74

    $default  reduce using rule 55 (expr_mmd)


state 100

   56 expr_mmd: expr_mmd TOKEN_DIV expr_e .
   59 expr_e: expr_e . TOKEN_EXPONENT expr_negate

    TOKEN_EXPONENT  shift, and go to state 74

    $default  reduce using rule 56 (expr_mmd)


state 101

   57 expr_mmd: expr_mmd TOKEN_MODULO expr_e .
   59 expr_e: expr_e . TOKEN_EXPONENT expr_negate

    TOKEN_EXPONENT  shift, and go to state 74

    $default  reduce using rule 57 (expr_mmd)


state 102

   59 expr_e: expr_e TOKEN_EXPONENT expr_negate .

    $default  reduce using rule 59 (expr_e)


state 103

   14 stmt: TOKEN_LEFTBRACKET expr TOKEN_RIGHTBRACKET TOKEN_RETURN .

    $default  reduce using rule 14 (stmt)


state 104

   30 if_stmt_list: TOKEN_LEFTCURLYBRACE TOKEN_RIGHTCURLYBRACE . if_stmt_list

    TOKEN_LEFTCURLYBRACE  shift, and go to state 76

    $default  reduce using rule 28 (if_stmt_list)

    if_stmt_list  go to state 119


state 105

   29 if_stmt_list: TOKEN_LEFTCURLYBRACE stmt . TOKEN_RIGHTCURLYBRACE if_stmt_list

    TOKEN_RIGHTCURLYBRACE  shift, and go to state 120


state 106

   18 stmt: TOKEN_IF expr if_stmt_list TOKEN_ELSE . if_stmt_list TOKEN_IF_END

    TOKEN_LEFTCURLYBRACE  shift, and go to state 76

    $default  reduce using rule 28 (if_stmt_list)

    if_stmt_list  go to state 121


state 107

   17 stmt: TOKEN_IF expr if_stmt_list TOKEN_IF_END .

    $default  reduce using rule 17 (stmt)


state 108

   15 stmt: TOKEN_PRINT TOKEN_LEFTPARAN expr TOKEN_RIGHTPARAN .

    $default  reduce using rule 15 (stmt)


state 109

   19 stmt: name TOKEN_HEART opt_fcall_list TOKEN_HEART .

    $default  reduce using rule 19 (stmt)


state 110

   27 fcall_list: expr TOKEN_COMMA . fcall_list

    TOKEN_IDENT      shift, and go to state 1
    TOKEN_MINUS      shift, and go to state 27
    TOKEN_STRING     shift, and go to state 28
    TOKEN_CHAR       shift, and go to state 29
    TOKEN_NUMBER     shift, and go to state 30
    TOKEN_FALSE      shift, and go to state 31
    TOKEN_NEGATION   shift, and go to state 32
    TOKEN_LEFTPARAN  shift, and go to state 33
    TOKEN_TRUE       shift, and go to state 34

    fcall_list    go to state 122
    expr          go to state 82
    expr_bcomp_a  go to state 36
    expr_icomp    go to state 37
    expr_as       go to state 38
    expr_mmd      go to state 39
    expr_e        go to state 40
    expr_negate   go to state 41
    expr_par      go to state 42
    factor        go to state 43
    name          go to state 44


state 111

   34 var_assgn: type TOKEN_COLON name TOKEN_ASSIGN expr .
   41 expr: expr . TOKEN_OR expr_bcomp_a

    TOKEN_OR  shift, and go to state 61

    $default  reduce using rule 34 (var_assgn)


state 112

    5 decl: name TOKEN_FUNCTIONA type TOKEN_FUNCTIONB opt_param_list . TOKEN_FUNCTIONC stmt_list TOKEN_FUNCTION_END

    TOKEN_FUNCTIONC  shift, and go to state 123


state 113

    8 opt_param_list: param_list .

    $default  reduce using rule 8 (opt_param_list)


state 114

    9 param_list: param .
   10           | param . TOKEN_COMMA param_list

    TOKEN_COMMA  shift, and go to state 124

    $default  reduce using rule 9 (param_list)


state 115

   11 param: type . TOKEN_COLON name

    TOKEN_COLON  shift, and go to state 125


state 116

   33 while_stmt_list: TOKEN_TILDE TOKEN_TILDE . while_stmt_list

    TOKEN_TILDE  shift, and go to state 87

    $default  reduce using rule 31 (while_stmt_list)

    while_stmt_list  go to state 126


state 117

   32 while_stmt_list: TOKEN_TILDE stmt . TOKEN_TILDE while_stmt_list

    TOKEN_TILDE  shift, and go to state 127


state 118

   16 stmt: TOKEN_WHILEA expr TOKEN_WHILEB while_stmt_list TOKEN_WHILE_END .

    $default  reduce using rule 16 (stmt)


state 119

   30 if_stmt_list: TOKEN_LEFTCURLYBRACE TOKEN_RIGHTCURLYBRACE if_stmt_list .

    $default  reduce using rule 30 (if_stmt_list)


state 120

   29 if_stmt_list: TOKEN_LEFTCURLYBRACE stmt TOKEN_RIGHTCURLYBRACE . if_stmt_list

    TOKEN_LEFTCURLYBRACE  shift, and go to state 76

    $default  reduce using rule 28 (if_stmt_list)

    if_stmt_list  go to state 128


state 121

   18 stmt: TOKEN_IF expr if_stmt_list TOKEN_ELSE if_stmt_list . TOKEN_IF_END

    TOKEN_IF_END  shift, and go to state 129


state 122

   27 fcall_list: expr TOKEN_COMMA fcall_list .

    $default  reduce using rule 27 (fcall_list)


state 123

    5 decl: name TOKEN_FUNCTIONA type TOKEN_FUNCTIONB opt_param_list TOKEN_FUNCTIONC . stmt_list TOKEN_FUNCTION_END

    TOKEN_WHILEA       shift, and go to state 14
    TOKEN_IDENT        shift, and go to state 1
    TOKEN_LEFTBRACKET  shift, and go to state 15
    TOKEN_BOOLEAN      shift, and go to state 2
    TOKEN_CHARKEY      shift, and go to state 3
    TOKEN_IF           shift, and go to state 16
    TOKEN_INTEGER      shift, and go to state 5
    TOKEN_PRINT        shift, and go to state 17
    TOKEN_STRINGKEY    shift, and go to state 6
    TOKEN_VOID         shift, and go to state 7

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 130
    stmt       go to state 19
    var_assgn  go to state 20
    type       go to state 12
    name       go to state 21


state 124

   10 param_list: param TOKEN_COMMA . param_list

    TOKEN_BOOLEAN    shift, and go to state 2
    TOKEN_CHARKEY    shift, and go to state 3
    TOKEN_INTEGER    shift, and go to state 5
    TOKEN_STRINGKEY  shift, and go to state 6
    TOKEN_VOID       shift, and go to state 7

    param_list  go to state 131
    param       go to state 114
    type        go to state 115


state 125

   11 param: type TOKEN_COLON . name

    TOKEN_IDENT  shift, and go to state 1

    name  go to state 132


state 126

   33 while_stmt_list: TOKEN_TILDE TOKEN_TILDE while_stmt_list .

    $default  reduce using rule 33 (while_stmt_list)


state 127

   32 while_stmt_list: TOKEN_TILDE stmt TOKEN_TILDE . while_stmt_list

    TOKEN_TILDE  shift, and go to state 87

    $default  reduce using rule 31 (while_stmt_list)

    while_stmt_list  go to state 133


state 128

   29 if_stmt_list: TOKEN_LEFTCURLYBRACE stmt TOKEN_RIGHTCURLYBRACE if_stmt_list .

    $default  reduce using rule 29 (if_stmt_list)


state 129

   18 stmt: TOKEN_IF expr if_stmt_list TOKEN_ELSE if_stmt_list TOKEN_IF_END .

    $default  reduce using rule 18 (stmt)


state 130

    5 decl: name TOKEN_FUNCTIONA type TOKEN_FUNCTIONB opt_param_list TOKEN_FUNCTIONC stmt_list . TOKEN_FUNCTION_END

    TOKEN_FUNCTION_END  shift, and go to state 134


state 131

   10 param_list: param TOKEN_COMMA param_list .

    $default  reduce using rule 10 (param_list)


state 132

   11 param: type TOKEN_COLON name .

    $default  reduce using rule 11 (param)


state 133

   32 while_stmt_list: TOKEN_TILDE stmt TOKEN_TILDE while_stmt_list .

    $default  reduce using rule 32 (while_stmt_list)


state 134

    5 decl: name TOKEN_FUNCTIONA type TOKEN_FUNCTIONB opt_param_list TOKEN_FUNCTIONC stmt_list TOKEN_FUNCTION_END .

    $default  reduce using rule 5 (decl)
