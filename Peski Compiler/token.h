#ifndef TOKEN_H
#define TOKEN_H

typedef enum {
    TOKEN_EOF=0,
    TOKEN_WHILEA,
    TOKEN_WHILEB,
    TOKEN_WHILE_END,
    TOKEN_PLUS,
    TOKEN_IDENT,
    TOKEN_EXPONENT,
    TOKEN_ERROR,
    TOKEN_MINUS,
    TOKEN_MUL,
    TOKEN_HEART,
    TOKEN_DIV,
    TOKEN_STRING,
    TOKEN_CHAR,
    TOKEN_NUMBER,
    TOKEN_FALSE,
    TOKEN_DECREMENT,
    TOKEN_INCREMENT,
    TOKEN_ASSIGN,
    TOKEN_EQUALITY,
    TOKEN_LT,
    TOKEN_LE,
    TOKEN_GT,
    TOKEN_GE,
    TOKEN_NOTEQUALS,
    TOKEN_NEGATION,
    TOKEN_MODULO,
    TOKEN_AND,
    TOKEN_OR,
    TOKEN_LEFTPARAN,
    TOKEN_RIGHTPARAN,
    TOKEN_LEFTBRACKET,
    TOKEN_RIGHTBRACKET,
    TOKEN_CCOMMENT,
    TOKEN_CPPCOMMENT,
    TOKEN_TRUE,
    TOKEN_ARRAY,
    TOKEN_BOOLEAN,
    TOKEN_CHARKEY,
    TOKEN_ELSE,
    TOKEN_FOR,
    TOKEN_FUNCTIONA,
    TOKEN_FUNCTION_MAIN,
    TOKEN_FUNCTIONB,
    TOKEN_FUNCTIONC,
    TOKEN_FUNCTION_END,
    TOKEN_IF,
    TOKEN_IF_END,
    TOKEN_INTEGER,
    TOKEN_PRINT,
    TOKEN_RETURN,
    TOKEN_STRINGKEY,
    TOKEN_VOID,
    TOKEN_SEMICOLON,
    TOKEN_COLON,
    TOKEN_TILDE,
    TOKEN_LEFTCURLYBRACE,
    TOKEN_RIGHTCURLYBRACE,
    TOKEN_COMMA
    
} token_t;

#endif

